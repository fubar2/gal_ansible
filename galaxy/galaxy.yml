- hosts: galaxyservers
  become_user: root
  become: true
  vars:
    __galaxy_dir_perms: '0755'
    galaxy_config_perms: '0644'
    galaxy_config_style: yaml
    galaxy_layout: "root-dir"
    galaxy_root: "/evol/srv/galaxy"
    galaxy_server_dir: "/evol/srv/server"
    galaxy_config_dir: "/evol/srv/server/config" # this seems always set from root at startup as part of privsep
    galaxy_venv_dir: "/evol/srv/venv"
    galaxy_commit_id: "release_21.09"
    galaxy_separate_privileges: yes
    galaxy_create_user: yes
    galaxy_manage_paths: yes
    galaxy_user: galaxy
    galaxy_privsep_user: root
    galaxy_group: galaxy
    galaxy_cvmfs_repos_enabled
    galaxy_restart_handler_name: Restart Galaxy
    dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
    containers_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.xml"
    galaxy_singularity_images_cvmfs_path:  "/cvmfs/singularity.galaxyproject.org/all/" # "{{ galaxy_mutable_data_dir }}/cache/singularity"
    #galaxy_systemd_mode: '' # do not want
    galaxy_config_templates:
    # - src: templates/galaxy/config/tool_conf_interactive.xml.j2
    #  dest: "{{ galaxy_config_dir }}/tool_conf_interactive.xml"
      - src: templates/galaxy/config/job_conf.xml.j2
        dest: "{{ galaxy_config_dir }}/job_conf.xml"
      - src: templates/galaxy/config/container_resolvers_conf.xml.j2
        dest: "{{ containers_resolvers_config_file }}"
      - src: templates/galaxy/config/dependency_resolvers_conf.xml
        dest: "{{ dependency_resolvers_config_file }}"
    galaxy_tool_dependency_dir: "{{ galaxy_mutable_data_dir }}/dependencies"
    galaxy_toolshed_server_dir: "{{ galaxy_server_dir }}"
    galaxy_toolshed_instance_codename: "TestToolshed"
    galaxy_toolshed_mutable_config_dir: "{{ galaxy_root }}/var/config"
    galaxy_toolshed_mutable_data_dir: "{{ galaxy_root }}/var/data"
    galaxy_toolshed_log_dir: "{{ galaxy_toolshed_mutable_data_dir }}/logs"
    galaxy_toolshed_venv_dir: "{{ galaxy_venv_dir }}"
    galaxy_toolshed_config_dir: "{{ galaxy_root }}/var/config"
    #galaxy_toolshed_config_file: "{{ galaxy_toolshed_mutable_config_dir }}/tool_shed.yml"
    galaxy_toolshed_config_style: "yaml"
    galaxy_toolshed_config_admin_users: "ross.lazarus@gmail.com,admin@galaxy.org"
    galaxy_toolshed_config_id_secret: " some silly rand0m t3xt  @#"

    postgresql_objects_users:
      - name: galaxy
        password: null
    postgresql_objects_databases:
      - name: galaxy
        owner: galaxy
    galaxy_config:
      gunicorn:
        bind: localhost:5000
        config: "{{ galaxy_server_dir }}/lib/galaxy/web_stack/gunicorn_config.py"
        gunicorn_extra_args: '--forwarded-allow-ips="*"'
      galaxy:
        enable_mulled_containers: true
        dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
        container_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.xml"
        # use_cached_dependency_manager: true
        galaxy_url_prefix: "/galaxy"
        brand: "RossGalaxy"
        admin_users: ross.lazarus@gmail.com
        database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
        #file_path: "{{ galaxy_server_dir}}/database/files"
        #check_migrate_tools: false
        tool_data_path: "{{ galaxy_mutable_data_dir }}/tool-data"
        tool_data_table_config_path: /cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml
        #, {{ galaxy_config_dir }}/tool_conf_interactive.xml"
        object_store_store_by: uuid
        id_secret: "put some nonsense h3r3 5-23la12=kj"
        # SQL Performance
        database_engine_option_server_side_cursors: true
        slow_query_log_threshold: 5
        # File serving Performance
        nginx_x_accel_redirect_base: '/_x_accel_redirect'
        # Automation / Ease of Use / User-facing features
        watch_job_rules: 'auto'
        allow_path_paste: true
        enable_quotas: true
        allow_user_deletion: true
        show_welcome_with_login: true
        expose_user_name: true
        expose_dataset_path: true
        expose_potentially_sensitive_job_metrics: true
        # NFS workarounds
        retry_job_output_collection: 3
        # Debugging
        cleanup_job: never # onsuccess
        allow_user_impersonation: true
        # Tool security
        outputs_to_working_directory: true
        # job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
        #interactivetools_enable: true
        #interactivetools_map: "{{ gie_proxy_sessions_path }}"
      uwsgi:
        socket: 127.0.0.1:5000
        buffer-size: 16384
        processes: 1
        threads: 4
        offload-threads: 2
        #static-map:
          #- /static/style={{ galaxy_server_dir }}/static/style/blue
          #- /static={{ galaxy_server_dir }}/static
        master: true
        virtualenv: "{{ galaxy_venv_dir }}"
        pythonpath: "{{ galaxy_server_dir }}/lib"
        #module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
        mount: /galaxy=galaxy.webapps.galaxy.buildapp:uwsgi_app()
        manage-script-name: true
        thunder-lock: true
        die-on-term: true
        hook-master-start:
          - unix_signal:2 gracefully_kill_them_all
          - unix_signal:15 gracefully_kill_them_all
        py-call-osafterfork: true
        enable-threads: true
        mule:
          - lib/galaxy/main.py
          - lib/galaxy/main.py
        farm: job-handlers:1,2
        socket-timeout: 300s
        harakiri: 300s
    galaxy_toolshed_config:
      gunicorn:
        bind: localhost:9009
        config: "{{ galaxy_server_dir }}/lib/galaxy/web_stack/gunicorn_config.py"
        gunicorn_extra_args: '--forwarded-allow-ips="*"'

      tool_shed:
        # secrets
        id_secret: "{{ galaxy_toolshed_config_id_secret }}"
        admin_users: "{{ galaxy_toolshed_config_admin_users }}"
        galaxy_separate_privileges: false
        # paths

        file_path: "{{ galaxy_toolshed_mutable_data_dir }}/files"
        new_file_path: "{{ galaxy_toolshed_mutable_data_dir }}/tmp"
        tool_data_path: "{{ galaxy_toolshed_mutable_data_dir }}/tool-data"

        # general stuff
        database_connection: "sqlite:///{{ galaxy_toolshed_mutable_config_dir }}/community.sqlite?isolation_level=IMMEDIATE"
        #database_connection: "postgresql:///galaxy_testtoolshed?host=/var/run/postgresql"
        # database_engine_option_server_side_cursors: "True"
        log_level: "DEBUG"
        debug: "False"
        use_lint: "False"
        num_tool_test_results_saved: "5"
        support_url: "https://galaxyproject.org/support"
        smtp_server: "smtp.psu.edu"
        email_from: "galaxy-no-reply@toolshed.g2.bx.psu.edu"
        brand: 'RossToolShed'
        conda_auto_init: false
        tool_dependency_dir: "{{ galaxy_toolshed_mutable_data_dir }}/dependencies"
        # stuff that shouldn't be here but maybe has to

  pre_tasks:
    - name: Install Dependencies
      become: yes
      become_user: root
      apt:
        name: ['acl', 'bzip2', 'git', 'make', 'python3-pip', 'python3-virtualenv', 'tar', 'virtualenv', 'mercurial', 'uwsgi']

  roles:
    - galaxyproject.cvmfs
    - galaxyproject.nginx
    - role: galaxyproject.postgresql
    - role: natefoo.postgresql_objects
      become_user: postgres
    - geerlingguy.pip
    - role: galaxyproject.galaxy
      become_user: galaxy
    - galaxyproject.slurm
    - role: uchida.miniconda
    - gantsign.golang
    - cyverse-ansible.singularity
    - geerlingguy.docker
#    - usegalaxy_eu.gie_proxy
    - role: galaxyproject.galaxy_toolshed
      become_user: galaxy

  tasks:
    - name: Ansible copy file to remote server
      become: yes
      copy:
          src: "{{ galaxy_server_dir }}/static"
          dest: "/var/www"
          group: "galaxy"
          owner: "www-data"
          remote_src: yes
          directory_mode: yes

  handlers:
    - name: Restart Galaxy
      become: yes
      systemd:
        name: galaxy
        state: restarted
