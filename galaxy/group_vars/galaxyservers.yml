---
# Python 3 support
pip_virtualenv_command: /usr/bin/python3 -m virtualenv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy
certbot_virtualenv_package_name: python3-virtualenv    # usegalaxy_eu.certbot
pip_package: python3-pip                               # geerlingguy.pip

# PostgreSQL
postgresql_objects_users:
  - name: galaxy
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy
# PostgreSQL Backups
postgresql_backup_dir: /data/backups
postgresql_backup_local_dir: "{{ '~postgres' | expanduser }}/backups"

galaxy_config_templates:
# - src: templates/galaxy/config/tool_conf_interactive.xml.j2
#  dest: "{{ galaxy_config_dir }}/tool_conf_interactive.xml"
  - src: templates/galaxy/config/job_conf.xml.j2
    dest: "{{ galaxy_config_dir }}/job_conf.xml"
  - src: templates/galaxy/config/container_resolvers_conf.xml.j2
    dest: "{{ galaxy_config.galaxy.containers_resolvers_config_file }}"
  - src: templates/galaxy/config/dependency_resolvers_conf.xml
    dest: "{{ galaxy_config.galaxy.dependency_resolvers_config_file }}"


# Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /srv/galaxy
galaxy_user: {name: galaxy, shell: /bin/bash}
galaxy_commit_id: release_22.01
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: 4.7.12
miniconda_manage_dependencies: false
galaxy_config:
  galaxy:
    brand: "RossGalaxy"
    admin_users: ross.lazarus@gmail.com
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
    containers_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.xml"
    file_path: /data
    check_migrate_tools: false
    tool_data_path: "{{ galaxy_mutable_data_dir }}/tool-data"
    tool_data_table_config_path: /cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml
#    tool_config_file: "{{ galaxy_config_dir }}/job_conf.xml "
#, {{ galaxy_config_dir }}/tool_conf_interactive.xml"
    object_store_store_by: uuid
    id_secret: "{{ vault_id_secret }}"
    # SQL Performance
    database_engine_option_server_side_cursors: true
    slow_query_log_threshold: 5
    enable_per_request_sql_debugging: true
    # File serving Performance
    nginx_x_accel_redirect_base: /_x_accel_redirect
    # Automation / Ease of Use / User-facing features
    watch_job_rules: 'auto'
    allow_path_paste: true
    enable_quotas: true
    allow_user_deletion: true
    show_welcome_with_login: true
    expose_user_name: true
    expose_dataset_path: true
    expose_potentially_sensitive_job_metrics: true
    # NFS workarounds
    retry_job_output_collection: 3
    # Debugging
    cleanup_job: onsuccess
    allow_user_impersonation: true
    # Tool security
    outputs_to_working_directory: true
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    #interactivetools_enable: true
    #interactivetools_map: "{{ gie_proxy_sessions_path }}"
  uwsgi:
    socket: 127.0.0.1:5000
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /static={{ galaxy_server_dir }}/static
      - /favicon.ico={{ galaxy_server_dir }}/static/favicon.ico
    static-safe: client/galaxy/images
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2
    socket-timeout: 300

# systemd
galaxy_manage_systemd: yes

# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
    systemctl restart nginx || true
certbot_domains:
  - "{{ inventory_hostname }}"
#  - "*.interactivetoolentrypoint.interactivetool.{{ inventory_hostname }}"
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - galaxy
#  - galaxy-gie-proxy

nginx_enable_default_server: false
nginx_conf_http:
  client_max_body_size: 1g
nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

# Golang
golang_gopath: '/opt/workspace-go'
# Singularity target version
singularity_version: "3.7.4"
singularity_go_path: "{{ golang_install_dir }}"
galaxy_tools_tool_list: tools/tool_list.yaml
## Interactive Tools
#docker_install_compose: false
#docker_users:
  #- "{{ galaxy_user.name }}"
#gie_proxy_dir: /srv/galaxy/gie-proxy/proxy
#gie_proxy_git_version: main
#gie_proxy_setup_nodejs: nodeenv
#gie_proxy_virtualenv_command: "{{ pip_virtualenv_command }}"
#gie_proxy_nodejs_version: "10.13.0"
#gie_proxy_virtualenv: /srv/galaxy/gie-proxy/venv
#gie_proxy_setup_service: systemd
#gie_proxy_sessions_path: "{{ galaxy_mutable_data_dir }}/interactivetools_map.sqlite"

#Toolshed
galaxy_toolshed_server_dir: "/srv/toolshed"
galaxy_toolshed_venv_dir: "/galaxy/venv"
galaxy_toolshed_manage_static_setup: yes
galaxy_toolshed_manage_database: no
galaxy_venv_dir: "/galaxy/venv"
